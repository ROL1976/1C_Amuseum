#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область ОбработчикиСобытий


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ДополнительныеСвойства.Вставить("ДатаДокумента",Ссылка.Дата);
	ДополнительныеСвойства.Вставить("Стоимость",Билет.СуммаДокумента);
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ,Режим)
	
	МоментВремениОстатков = ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени());
		
	Если ДатаДокументаСдвинутаВперед(ДополнительныеСвойства.ДатаДокумента, Дата) Тогда
	     Движения.Билеты.Записать();
	КонецЕсли;
	
	Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
    |	БилетыОстатки.КоличествоБилетовОстаток
    |ИЗ
    |	РегистрНакопления.Билеты.Остатки(&Период, Аттракцион = &Аттракцион
    |	И Билет = &Билет) КАК БилетыОстатки";
    Запрос.УстановитьПараметр("Период", МоментВремениОстатков);
    Запрос.УстановитьПараметр("Аттракцион", ПосещаемыйАттракцион);
    Запрос.УстановитьПараметр("Билет", Билет);
    
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
  
    
    Если Выборка.Следующий() И Выборка.КоличествоБилетовОстаток > 0 Тогда
    	Движения.Билеты.Записывать = Истина;
		Движение = Движения.Билеты.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Аттракцион = ПосещаемыйАттракцион;
		Движение.Билет = Билет;
		Движение.КоличествоБилетов = 1;
		
		Движения.СтоимостьБилетов.Записывать = Истина;
		ДвижениеСтоимость = Движения.СтоимостьБилетов.Добавить();
		ДвижениеСтоимость.Период = Дата;
		ДвижениеСтоимость.Аттракцион = ПосещаемыйАттракцион;
		ДвижениеСтоимость.СтоимостьПосещенных = ДополнительныеСвойства.Стоимость;
		

	Иначе
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Билет недействителен' ");
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
	КонецЕсли;
    
КонецПроцедуры



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДатаДокументаСдвинутаВперед(СтараяДата, НоваяДата)
	Возврат НоваяДата > СтараяДата
КонецФункции	

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
